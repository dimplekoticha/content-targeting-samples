/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.content.targeting.rule.user.journey.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the UserJourney service. Represents a row in the &quot;CT_UJ_UserJourney&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.content.targeting.rule.user.journey.model.impl.UserJourneyModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.content.targeting.rule.user.journey.model.impl.UserJourneyImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see UserJourney
 * @see com.liferay.content.targeting.rule.user.journey.model.impl.UserJourneyImpl
 * @see com.liferay.content.targeting.rule.user.journey.model.impl.UserJourneyModelImpl
 * @generated
 */
@ProviderType
public interface UserJourneyModel extends BaseModel<UserJourney>, ShardedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a user journey model instance should use the {@link UserJourney} interface instead.
	 */

	/**
	 * Returns the primary key of this user journey.
	 *
	 * @return the primary key of this user journey
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this user journey.
	 *
	 * @param primaryKey the primary key of this user journey
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the user journey ID of this user journey.
	 *
	 * @return the user journey ID of this user journey
	 */
	public long getUserJourneyId();

	/**
	 * Sets the user journey ID of this user journey.
	 *
	 * @param userJourneyId the user journey ID of this user journey
	 */
	public void setUserJourneyId(long userJourneyId);

	/**
	 * Returns the company ID of this user journey.
	 *
	 * @return the company ID of this user journey
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this user journey.
	 *
	 * @param companyId the company ID of this user journey
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the modified date of this user journey.
	 *
	 * @return the modified date of this user journey
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this user journey.
	 *
	 * @param modifiedDate the modified date of this user journey
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the anonymous user ID of this user journey.
	 *
	 * @return the anonymous user ID of this user journey
	 */
	public long getAnonymousUserId();

	/**
	 * Sets the anonymous user ID of this user journey.
	 *
	 * @param anonymousUserId the anonymous user ID of this user journey
	 */
	public void setAnonymousUserId(long anonymousUserId);

	/**
	 * Returns the anonymous user uuid of this user journey.
	 *
	 * @return the anonymous user uuid of this user journey
	 */
	public String getAnonymousUserUuid();

	/**
	 * Sets the anonymous user uuid of this user journey.
	 *
	 * @param anonymousUserUuid the anonymous user uuid of this user journey
	 */
	public void setAnonymousUserUuid(String anonymousUserUuid);

	/**
	 * Returns the rule instance ID of this user journey.
	 *
	 * @return the rule instance ID of this user journey
	 */
	public long getRuleInstanceId();

	/**
	 * Sets the rule instance ID of this user journey.
	 *
	 * @param ruleInstanceId the rule instance ID of this user journey
	 */
	public void setRuleInstanceId(long ruleInstanceId);

	/**
	 * Returns the current plid of this user journey.
	 *
	 * @return the current plid of this user journey
	 */
	public long getCurrentPlid();

	/**
	 * Sets the current plid of this user journey.
	 *
	 * @param currentPlid the current plid of this user journey
	 */
	public void setCurrentPlid(long currentPlid);

	/**
	 * Returns the finished of this user journey.
	 *
	 * @return the finished of this user journey
	 */
	public boolean getFinished();

	/**
	 * Returns <code>true</code> if this user journey is finished.
	 *
	 * @return <code>true</code> if this user journey is finished; <code>false</code> otherwise
	 */
	public boolean isFinished();

	/**
	 * Sets whether this user journey is finished.
	 *
	 * @param finished the finished of this user journey
	 */
	public void setFinished(boolean finished);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(UserJourney userJourney);

	@Override
	public int hashCode();

	@Override
	public CacheModel<UserJourney> toCacheModel();

	@Override
	public UserJourney toEscapedModel();

	@Override
	public UserJourney toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}